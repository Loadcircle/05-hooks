{"version":3,"sources":["components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/todoReducer.js","components/08-useReducer/TodoApp.js","index.js"],"names":["TodoAdd","handleAddTodo","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","useForm","description","formValues","onSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done","className","type","placeholder","autoComplete","onChange","TodoListItem","todo","index","handleDelete","handleToggle","onClick","TodoList","todos","map","key","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebe75ef9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({handleAddTodo}) => {\r\n\r\n    \r\n    const  [formValues, handleInputChange, reset] = useForm({\r\n        description: '',\r\n    });\r\n    \r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        if(formValues.description.trim().length <= 2){\r\n            return;\r\n        }\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: formValues.description,\r\n            done: false\r\n        };\r\n\r\n        handleAddTodo(newTodo);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar TODO'S</h4>\r\n            <hr/>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    placeholder=\"Tarea\"\r\n                    autoComplete=\"off\"\r\n                    value={formValues.description}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary mt-1 btn-block\">\r\n                    Agregar\r\n                </button>\r\n            </form>                \r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ()=>{\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target})=>{        \r\n        setValues(\r\n            {\r\n                ...values,\r\n                [target.name]:target.value\r\n            }\r\n        );\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const TodoListItem = ({todo, index, handleDelete, handleToggle }) => {\r\n    return (\r\n        <li \r\n            className=\"list-group-item\">\r\n                <p \r\n                    className={`no-margin pointer ${todo.done && 'completed'}`} \r\n                    onClick={()=>{handleToggle(todo.id)}}\r\n                >\r\n                    {index+1} {todo.desc}\r\n                </p>    \r\n                <button \r\n                    className=\"btn btn-danger\"\r\n                    onClick={()=>{handleDelete(todo.id)}}\r\n                >\r\n                    Borrar\r\n                </button>                        \r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({todos, handleDelete, handleToggle}) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n        {\r\n            todos.map((todo, index)=>(\r\n                <TodoListItem \r\n                    key={todo.id} \r\n                    todo={todo} \r\n                    index={index} \r\n                    handleDelete={handleDelete} \r\n                    handleToggle={handleToggle} \r\n                />\r\n            ))\r\n        }                \r\n        </ul>\r\n    )\r\n}\r\n","export const todoReducer = (state = [], action)=>{\r\n\r\n    switch (action?.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n    \r\n        case 'toggle-old':            \r\n            return state.map(todo =>{\r\n                if(todo.id === action.payload){\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                }else{\r\n                    return todo;\r\n                }\r\n            });\r\n    \r\n        case 'toggle':\r\n            return state.map( todo => (todo.id === action.payload) ? {...todo, done: !todo.done} : todo);\r\n        case 'delete':\r\n            return state.filter(todo=> todo.id !== action.payload );\r\n    \r\n        default:\r\n            return state\r\n    }\r\n\r\n};","import React, { useEffect, useReducer } from 'react'\r\nimport './../components.css';\r\nimport { TodoAdd } from './TodoAdd';\r\nimport { TodoList } from './TodoList';\r\nimport { todoReducer } from './todoReducer';\r\n\r\nconst init = ()=>{\r\n    //si el local storage esta vacio, regresa un array vacio\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n    //al utilizar init, el estado inicial sera directamente lo que retorna la funcion init\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));        \r\n    }, [todos])\r\n\r\n    const handleDelete = (todoId) =>{        \r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        };\r\n\r\n        dispatch(action);\r\n    }\r\n\r\n    const handleToggle = (todoId)=>{\r\n\r\n        const action = {\r\n            type: 'toggle',\r\n            payload: todoId\r\n        };\r\n        dispatch(action);\r\n    };\r\n\r\n    const handleAddTodo = (newTodo)=>{\r\n\r\n        const action = {\r\n            type: 'add',\r\n            payload: newTodo\r\n        };\r\n        \r\n        dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Todo app ({todos.length})</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <TodoList \r\n                        todos={todos} \r\n                        handleDelete={handleDelete} \r\n                        handleToggle={handleToggle}\r\n                    />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                    <TodoAdd \r\n                        handleAddTodo={handleAddTodo} \r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n// import HookApp from './HookApp';\n// import { CounterApp } from './components/01-useState/CounterApp';\n// import { CounterWithCustomHooks } from './components/01-useState/CounterWithCustomHooks';\n// import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// import { FormWithCustomHooks } from './components/02-useEffect/FormWithCustomHooks';\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n// import { FocusScreen } from './components/04-useReft/FocusScreen';\n// import { RealExampleRef } from './components/04-useReft/RealExampleRef';\n// import { LayoutEffect } from './components/05-useLayoutEffect/LayoutEffect';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { MemoHook } from './components/06-memos/MemoHook';\n// import { CallbackHook } from './components/06-memos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\n// import './components/08-useReducer/intro-reducer'\nimport './index.css';\n\n\nReactDOM.render(  \n    <TodoApp />\n    ,document.getElementById('root')\n);\n"],"sourceRoot":""}